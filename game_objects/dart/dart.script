local acc = vmath.vector3(0, 0, 0)
local WIDTH = 20
local SCREENWIDTH = 360

function clamp(x, min, max)
	if x < min then x = min elseif x > max then x = max end
	return x
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "clear_color", {color = vmath.vector4(1, 1, 1, 1)})
	self.calibrate_y = -0.5
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action.acc_x and action.acc_y and action.acc_z then
		acc = vmath.vector3(vmath.lerp(0.5, acc.x, action.acc_x), vmath.lerp(0.5, acc.y, action.acc_y), 0)
		local pos = go.get_position()
		go.set_position(vmath.vector3(clamp(pos.x + 10 * acc.x, WIDTH, SCREENWIDTH - WIDTH), vmath.lerp(0.2, pos.y, 100 + 100 * (acc.y - self.calibrate_y)), 0))
		local cam_rot = go.get("main:/camera", "euler")
		cam_rot = vmath.vector3(vmath.lerp(0.75, cam_rot.x, (acc.y - self.calibrate_y) * 2), vmath.lerp(0.75, cam_rot.y, -acc.x * 2), 0)
		go.set("main:/camera", "euler", cam_rot)
	end
	if action_id == hash("multi-touch") then
		self.calibrate_y = acc.y
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
